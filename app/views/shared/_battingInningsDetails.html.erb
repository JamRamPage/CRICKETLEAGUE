<%#Depending on which team's results (home/away) is being displayed, show
the appropraite title and links to make/edit each innings%>
<h1><%= if (locals[:team] == 'Home') then @match.hometeam.name else @match.awayteam.name end %> <%= I18n.t('.matches.scorecard.innings_title') %> </h1>
<p style="text-align:center"><%= if locals[:team] == 'Home' && @homeinnings == nil then link_to I18n.t('.matches.scorecard.create_innings'), new_match_innings_path(@match, @homeinnings,hometeambatted: true) end %></p>
<p style="text-align:center"><%= if locals[:team] == 'Away' && @awayinnings == nil then link_to I18n.t('.matches.scorecard.create_innings'), new_match_innings_path(@match, @awayinnings,hometeambatted: false) end %></p>
<p style="text-align:center"><%= if (locals[:team] == 'Home' && @homeinnings != nil) then link_to(I18n.t('.matches.scorecard.edit_innings'), edit_match_innings_path(@match, @homeinnings)) end %></p>
<p style="text-align:center"><%= if (locals[:team] == 'Away' && @awayinnings != nil) then link_to(I18n.t('.matches.scorecard.edit_innings'), edit_match_innings_path(@match, @awayinnings)) end %></p>
  <table>
    <thead>
      <tr>
        <th></th>
        <th><%= I18n.t('.matches.scorecard.batsman') %></th>
        <th><%= I18n.t('.matches.scorecard.how_out') %></th>
        <th><%= I18n.t('.matches.scorecard.runs') %></th>
        <th><%= I18n.t('.matches.scorecard.balls') %></th>
        <th><%= I18n.t('.matches.scorecard.fours') %></th>
        <th><%= I18n.t('.matches.scorecard.sixes') %></th>
        <th><%= I18n.t('.matches.scorecard.strike_rate') %></th>
        <%# We don't want the user to be able to add a new batting innings if the current "Innings" doesn't
        exist yet!%>
        <th><%= if (locals[:team] == 'Home' && @homeinnings != nil) then link_to I18n.t('.matches.scorecard.add_innings'), new_batting_innings_path(Innings_id: @homeinnings.id, hometeambatted: true) end%></th>
        <th><%= if (locals[:team] == 'Away' && @awayinnings != nil) then link_to I18n.t('.matches.scorecard.add_innings'), new_batting_innings_path(Innings_id: @awayinnings.id, hometeambatted: false) end%></th>
        <th colspan="3"></th>
      </tr>
    </thead>
    <%
    #Makes the current innings, batting_innings and bowling_innings objects
    #dependent on whether the home/away team is playing
    #(Helps to prevent repeating ourself in the code below
    #this if statement)
    if (locals[:team] == 'Home') then
      @innings = @homeinnings
      @battinginningses = @homebattinginnings
      @bowlinginningses = @homebowlinginnings
    else
      @innings = @awayinnings
      @battinginningses = @awaybattinginnings
      @bowlinginningses = @awaybowlinginnings
    end
    begin
      wides = @bowlinginningses.sum("wides")
      noballs = @bowlinginningses.sum("no_balls")
      miscextras = @innings.byes + @innings.legbyes + @innings.penalties
      overs = @bowlinginningses.sum("overs")
      battedruns = @battinginningses.sum("runs")
      bowledextras = wides + noballs
      wicketsconceded = @battinginningses.where.not(HowOut: 0).where.not(HowOut: 1).count
    rescue NoMethodError
      #Match not complete yet, display nothing
      battedruns = 0
      bowledextras = 0
      miscextras = 0
      wicketsconceded = 0
    end
    %>
    <tbody>
      <% @battinginningses.each do |batting_innings| %>
        <tr>
          <td><%= batting_innings.batsman_number %></td>
          <td><%= batting_innings.Player.name %></td>
          <td><%= batting_innings.outDescription %></td>
          <td><%= batting_innings.runs %></td>
          <td><%= batting_innings.balls %></td>
          <td><%= batting_innings.fours %></td>
          <td><%= batting_innings.sixes %></td>
          <td><%= ((batting_innings.runs.to_f / batting_innings.balls.to_f) * 100).round(2) %></td>
          <td><%= link_to I18n.t('edit'), edit_batting_innings_path(batting_innings, edit: true) %></td>
          <td><%= link_to I18n.t('destroy'), batting_innings, method: :delete, data: { confirm: 'Are you sure?' } %></td>
        </tr>
      <% end %>
      <tr>
        <td><%= I18n.t('.matches.scorecard.extra')%></td>
        <td></td><td><%= bowledextras + miscextras %>(b: <%= if (locals[:team] == 'Home' && !(@homeinnings==nil)) then @homeinnings.byes elsif (locals[:team] == 'Away' && !(@awayinnings==nil)) then @awayinnings.byes end%>,lb: <%= if (locals[:team] == 'Home' && !(@homeinnings==nil)) then @homeinnings.legbyes elsif (locals[:team] == 'Away' && !(@awayinnings==nil)) then @awayinnings.legbyes end %>,w: <%= wides%> ,nb:<%= noballs%> ,p:<%= if (locals[:team] == 'Home' && !(@homeinnings==nil)) then @homeinnings.penalties elsif (locals[:team] == 'Away' && !(@awayinnings==nil)) then @awayinnings.penalties end %>)</td>
      </tr>
      <tr>
        <td><strong><%= I18n.t('.matches.scorecard.total')%></strong></td>
        <%# A team's total runs is the total runs all the batters got, plus any extras
        that the bowlers conceded (wides and no balls),
        plus any extras that aren't counted against the bowler
        (byes, leg byes and penalty runs)%>
        <td></td><td><%= battedruns + bowledextras + miscextras%><%= if (wicketsconceded < 10) then '/' end %><%=if (wicketsconceded < 10) then wicketsconceded end %> (<%= overs%> <%= I18n.t('.matches.scorecard.overs')%>, RR: <%= ((battedruns + bowledextras + miscextras).to_f / overs.to_f).round(2)%>)</td>
      </tr>
    </tbody>

  </table>
